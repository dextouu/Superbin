name: Build and Push to GitHub Container Registry

on:
  schedule:
    - cron: "0 */6 * * *" # Exécute toutes les 6 heures
  push:
    branches: ["main"]
  workflow_dispatch: # Permet de lancer manuellement le workflow

permissions:
  contents: read       # Lire les fichiers nécessaires au build
  packages: write      # Écrire et pousser les packages sur GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: dextou/superbin

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Étape 3 : Connexion à GHCR avec PAT
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: dextou
          password: ${{ secrets.GHCR_PAT }}

      # Étape 4 : Construire et pousser l'image Docker
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .                                # Contexte de build (dossier courant)
          push: true                                # Pousser l'image après le build
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=https://github.com/dextou/superbin
            org.opencontainers.image.description="Superbin - Build and push to GHCR"
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}

      # Étape 5 : Debug : Vérification des images Docker
      - name: Debug pushed image
        run: |
          echo "Liste des images Docker locales :"
          docker images
          echo "Vérifie que l'image est bien poussée : ghcr.io/dextou/superbin:latest"
